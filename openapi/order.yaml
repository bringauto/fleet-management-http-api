paths:
  /order:
    post:
      operationId: createOrder
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Create a new Order.
      requestBody:
        description: Order model in JSON format.
        x-body-name: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: The new Order has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
    get:
      operationId: getOrders
      parameters:
        - $ref: 'common_models.yaml#/components/parameters/Since'
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Find all currently existing Orders.
      responses:
        '200':
          description: All the currently existing Orders have been sorted by their creation timestamp from the oldest to newest and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              example:
                [
                  {
                    "priority": "normal",
                    "userId": 1,
                    "carId": 1,
                    "timestamp": 1713256508978,
                    "targetStopId": 1,
                    "notification": "Order notification",
                    "stopRouteId": 1,
                    "notificationPhone": {"phone":'+420123456789'}
                  }
                ]
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'

  /order/{carId}:
    get:
      operationId: getCarOrders
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Find existing Orders by the corresponding Car ID and return them.
      parameters:
        - $ref: 'common_models.yaml#/components/parameters/Since'
        - name: carId
          in: path
          description: ID of the Car for which Orders shall be returned.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The Orders assigned to the Car with the given ID have been found, sorted by their creation timestamp from oldest to newest and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'

  /order/{carId}/{orderId}:
    parameters:
    - name: carId
      in: path
      description: ID of the Car to which the Order is assigned.
      required: true
      example: 1
      schema:
        type: integer
        format: int32
    - name: orderId
      in: path
      description: ID of the Order to be returned.
      required: true
      example: 1
      schema:
        type: integer
        format: int32

    get:
      operationId: getOrder
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Find an existing Order by the car ID and the order ID and return it.
      responses:
        '200':
          description: The Order with the specified car ID and order ID has been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'

    delete:
        operationId: deleteOrder
        x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
        tags:
          - order
        summary: Delete an Order identified by its ID and ID of a car to which it is assigned.
        responses:
          '200':
            description: The Order with the specified ID has been successfully deleted.
            content:
              text/plain:
                type: string
          '400':
            $ref: 'errors.yaml#/components/responses/BadRequest'
          '401':
            $ref: 'errors.yaml#/components/responses/Unauthorized'
          '403':
            $ref: 'errors.yaml#/components/responses/Forbidden'
          '404':
            $ref: 'errors.yaml#/components/responses/NotFound'
          '405':
            $ref: 'errors.yaml#/components/responses/MethodNotAllowed'
          default:
            $ref: 'errors.yaml#/components/responses/UnexpectedError'

  /orderstate:
    post:
      operationId: createOrderState
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Add a new Order State.
      requestBody:
        description: Order State model in JSON format.
        x-body-name: orderState
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderState'
        required: true
      responses:
        '200':
          description: The new Order State has been successfully posted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderState'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
    get:
      operationId: getAllOrderStates
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Find Order States for all existing Orders.
      parameters:
        - $ref: 'common_models.yaml#/components/parameters/Wait'
        - $ref: 'common_models.yaml#/components/parameters/Since'
        - $ref: 'common_models.yaml#/components/parameters/LastN'
      responses:
        '200':
          description: Successfully found all Order States complying with the request parameters.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderState'
              example:
                [
                  {
                    "orderId": 1,
                    "status": "accepted",
                    "carId": 1
                  }
                ]
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
  /orderstate/{orderId}:
    get:
      operationId: getOrderStates
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Find all Order States for a particular Order specified by its ID.
      parameters:
        - name: orderId
          in: path
          description: ID of the Order for which to find the Order States.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
        - $ref: 'common_models.yaml#/components/parameters/Wait'
        - $ref: 'common_models.yaml#/components/parameters/Since'
        - $ref: 'common_models.yaml#/components/parameters/LastN'
      responses:
        '200':
          description: Order States for the Order specified by its ID have been found, sorted by their creation timestamp \
            from the oldest to the newest and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderState'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'

components:
  schemas:
    Order:
      type: object
      description: Order object structure.
      required:
        - userId
        - carId
        - targetStopId
        - stopRouteId
      properties:
        id:
          $ref: 'common_models.yaml#/components/schemas/Id'
        priority:
          $ref: "#/components/schemas/Priority"
        userId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        timestamp:
          $ref: 'common_models.yaml#/components/schemas/Timestamp'
        carId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        notification:
          type: string
          example: 'Order notification'
        targetStopId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        stopRouteId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        notificationPhone:
          $ref: 'common_models.yaml#/components/schemas/MobilePhone'
        lastState:
          $ref: '#/components/schemas/OrderState'
    OrderState:
      type: object
      description: Order state object structure.
      required:
        - status
        - orderId
      properties:
        id:
          $ref: 'common_models.yaml#/components/schemas/Id'
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        timestamp:
          $ref: 'common_models.yaml#/components/schemas/Timestamp'
    OrderStatus:
      type: string
      description: OrderStatus (to_accept, accepted, in_progress, done, canceled).
      enum:
        - to_accept
        - accepted
        - in_progress
        - done
        - canceled
      example: to_accept
    # OpenAPI Generator IGNORES default value when using an enum. Using pattern matching instead.
    # The pattern is checked ONLY when the value is passed to the API, not when any of the objects below are created.
    Priority:
      type: string
      description: Priority (low, normal, high)
      pattern: ^(low|normal|high)$
      default: "normal"

