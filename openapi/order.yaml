paths:
  /order:
    post:
      operationId: createOrder
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Create a new order
      requestBody:
        description: New order JSON.
        x-body-name: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: A successful creation of a new order.
          content:
            text/plain:
              type: string
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
    get:
      operationId: getOrders
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Finds all orders
      responses:
        '200':
          description: Successfully found all orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              example:
                [
                  {
                    "priority": "normal",
                    "userId": 1,
                    "carId": 1,
                    "targetStopId": 1,
                    "notification": "Order notification",
                    "stopRouteId": 1,
                    "notificationPhone": {"phone":'+420123456789'}
                  }
                ]

        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
  /order/{orderId}:
    get:
      operationId: getOrder
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Finds order by ID
      parameters:
        - name: orderId
          in: path
          description: ID of order to return.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully found order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
    delete:
      operationId: deleteOrder
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Delete an order
      parameters:
        - name: orderId
          in: path
          description: ID of order to delete.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful order removal.
          content:
            text/plain:
              type: string
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        '405':
          $ref: 'errors.yaml#/components/responses/MethodNotAllowed'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
  /order/wait/{carId}:
    get:
      operationId: getUpdatedOrders
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
      tags:
        - order
      summary: Get order by car ID only if it changed.
      parameters:
        - name: carId
          in: path
          description: ID of a car with order to return.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully received a new order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        '408':
          $ref: 'errors.yaml#/components/responses/RequestTimeout'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
  /orderstate:
    post:
      operationId: createOrderState
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Create a new order state.
      requestBody:
        description: New order state JSON.
        x-body-name: orderState
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderState'
        required: true
      responses:
        '200':
          description: Successfully added new order state.
          content:
            text/plain:
              type: string
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
    get:
      operationId: getAllOrderStates
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Finds all order states
      parameters:
        - $ref: '#/components/parameters/Wait'
        - $ref: '#/components/parameters/Since'
      responses:
        '200':
          description: Successfully found all order states.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderState'
              example:
                [
                  {
                    "orderId": 1,
                    "status": "to_accept",
                    "carId": 1
                  }
                ]
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '403':
          $ref: 'errors.yaml#/components/responses/Forbidden'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'
  /orderstate/{orderId}:
    get:
      operationId: getOrderStates
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
      tags:
        - orderState
      summary: Finds order state by ID
      parameters:
        - name: orderId
          in: path
          description: ID of order for which states shall be returned.
          required: true
          example: 1
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/Wait'
        - $ref: '#/components/parameters/Since'
      responses:
        '200':
          description: Successfully found order state.
          content:
            text/plain:
              type: string
        '400':
          $ref: 'errors.yaml#/components/responses/BadRequest'
        '401':
          $ref: 'errors.yaml#/components/responses/Unauthorized'
        '404':
          $ref: 'errors.yaml#/components/responses/NotFound'
        default:
          $ref: 'errors.yaml#/components/responses/UnexpectedError'

components:
  schemas:
    Order:
      type: object
      description: Order object structure.
      required:
        - userId
        - carId
        - targetStopId
        - stopRouteId
      properties:
        id:
          $ref: 'common_models.yaml#/components/schemas/Id'
        priority:
          $ref: "#/components/schemas/Priority"
        userId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        carId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        notification:
          type: string
          example: 'Order notification'
        targetStopId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        stopRouteId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        notificationPhone:
          $ref: 'common_models.yaml#/components/schemas/MobilePhone'
    OrderState:
      type: object
      description: Order state object structure.
      required:
        - status
        - orderId
      properties:
        id:
          $ref: 'common_models.yaml#/components/schemas/Id'
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderId:
          $ref: 'common_models.yaml#/components/schemas/Id'
        timestamp:
          $ref: 'common_models.yaml#/components/schemas/Timestamp'
    OrderStatus:
      type: string
      description: OrderStatus (to_accept, accepted, in_progress, done, canceled).
      enum:
        - to_accept
        - accepted
        - in_progress
        - done
        - canceled
      example: to_accept
    # OpenAPI Generator IGNORES default value when using an enum. Using pattern matching instead.
    # The pattern is checked ONLY when the value is passed to the API, not when any of the objects below are created.
    Priority:
      type: string
      description: Priority (low, normal, high)
      pattern: ^(low|normal|high)$
      default: "normal"

  parameters:
    Wait:
      name: wait
      description: Applies to GET methods when no order statuses would be returned at the moment of request. If wait=true, \
        the request will wait for the next order state to be created and then return it. If wait=False or unspecified, the request will return \
        an empty list.
      in: query
      schema:
        type: boolean
        default: false
    Since:
      name: since
      description: A Unix timestamp in milliseconds. If specified, only states created at the time or later will be returned. If unspecified,
        all states are returned (since is set to 0 in that case).
      in: query
      schema:
        type: integer
        format: int64


