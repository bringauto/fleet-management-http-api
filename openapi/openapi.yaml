openapi: 3.0.0
info:
  title: BringAuto Fleet Management API
  description: Specification for BringAuto fleet backend HTTP API
  version: 1.0.0

servers:
  - url: /v1
    description: Local server

security:
- oAuth2AuthCode: []

tags:
  - name: car
    description: Car related functions
  - name: carState
    description: Car state related functions
  - name: order
    description: Order related functions
  - name: orderState
    description: Order state related functions
  - name: platformHwId
    description: Platform hardware ID related functions
  - name: route
    description: Route state related functions
  - name: stop
    description: Stop state related functions
  - name: login
    description: Authentication related functions
    


paths:
  /car:
    $ref: 'car.yaml#/paths/~1car'
  /car/{carId}:
    $ref: 'car.yaml#/paths/~1car~1{carId}'
  /car/startstop/{carId}:
    $ref: 'car.yaml#/paths/~1car~1startstop~1{carId}'
  /carstate:
    $ref: 'car.yaml#/paths/~1carstate'
  /carstate/{carId}:
    $ref: 'car.yaml#/paths/~1carstate~1{carId}'

  /order:
    $ref: 'order.yaml#/paths/~1order'
  /order/{orderId}:
    $ref: 'order.yaml#/paths/~1order~1{orderId}'
  /order/wait/{carId}:
    $ref: 'order.yaml#/paths/~1order~1wait~1{carId}'
  /orderstate:
    $ref: 'order.yaml#/paths/~1orderstate'
  /orderstate/{orderId}:
    $ref: 'order.yaml#/paths/~1orderstate~1{orderId}'

  /platformhwid:
    $ref: 'platform_hw_id.yaml#/paths/~1platformhwid'
  /platformhwid/{platformhwidId}:
    $ref: 'platform_hw_id.yaml#/paths/~1platformhwid~1{platformhwidId}'

  /route:
    $ref: 'route.yaml#/paths/~1route'
  /route/{routeId}:
    $ref: 'route.yaml#/paths/~1route~1{routeId}'

  /stop:
    $ref: 'stop.yaml#/paths/~1stop'
  /stop/{stopId}:
    $ref: 'stop.yaml#/paths/~1stop~1{stopId}'

  /login:
    get:
      description: Login using keycloak.
      operationId: login
      responses:
        "302":
          description: Redirect to keycloak authentication.
        "500":
          description: Login failed due to internal server error.
      security: []
      tags:
      - login
      x-openapi-router-controller: fleet_management_api.api_impl.auth_controller
      
  /token_get:
    get:
      description: Callback endpoint for keycloak to receive jwt token.
      operationId: token_get
      parameters:
      - description: State returned by keycloak authentication.
        example: your_state_info
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Session state returned by keycloak authentication.
        example: 167e141d-2f55-4d...
        explode: true
        in: query
        name: session_state
        required: false
        schema:
          type: string
        style: form
      - description: Code issuer returned by keycloak authentication.
        example: http%3A%2F%2Flocalhost%3A8081%2Frealms%2Fmaster
        explode: true
        in: query
        name: iss
        required: false
        schema:
          type: string
        style: form
      - description: Code used for jwt token generation returned by keycloak authentication.
        example: 5dea27d2-4b2d-48...
        explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns a standard keycloak token.
        "500":
          description: Login failed due to internal server error.
      security: []
      tags:
      - login
      x-openapi-router-controller: fleet_management_api.api_impl.auth_controller

  /token_refresh:
    get:
      description: Endpoint to receive jwt token from refresh token.
      operationId: token_refresh
      parameters:
      - description: Refresh token used for jwt token generation.
        example: eyJhbGciOiJIUzI1NiIsI...
        explode: true
        in: query
        name: refresh_token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns a new standard keycloak token.
        "500":
          description: Token refresh failed due to internal server error.
      security: []
      tags:
      - login
      x-openapi-router-controller: fleet_management_api.api_impl.auth_controller

components:
  parameters:
    kcState:
      description: State returned by keycloak authentication.
      example: your_state_info
      explode: true
      in: query
      name: state
      required: false
      schema:
        type: string
      style: form
    kcSessionState:
      description: Session state returned by keycloak authentication.
      example: 167e141d-2f55-4d...
      explode: true
      in: query
      name: session_state
      required: false
      schema:
        type: string
      style: form
    kcIss:
      description: Code issuer returned by keycloak authentication.
      example: http%3A%2F%2Flocalhost%3A8081%2Frealms%2Fmaster
      explode: true
      in: query
      name: iss
      required: false
      schema:
        type: string
      style: form
    kcCode:
      description: Code used for jwt token generation returned by keycloak authentication.
      example: 5dea27d2-4b2d-48...
      explode: true
      in: query
      name: code
      required: false
      schema:
        type: string
      style: form
    RefreshToken:
      description: Refresh token used for jwt token generation.
      example: eyJhbGciOiJIUzI1NiIsI...
      explode: true
      in: query
      name: refresh_token
      required: true
      schema:
        type: string
      style: form
      
  securitySchemes:
    oAuth2AuthCode:
      description: oAuth2 authorization
      flows:
        authorizationCode:
          authorizationUrl: https://keycloak.bringauto.com/realms/bringauto/protocol/openid-connect/auth
          refreshUrl: https://keycloak.bringauto.com/realms/bringauto/protocol/openid-connect/token
          scopes: {}
          tokenUrl: https://keycloak.bringauto.com/realms/bringauto/protocol/openid-connect/token
      type: oauth2
      x-tokenInfoFunc: fleet_management_api.controllers.security_controller.info_from_oAuth2AuthCode
      x-scopeValidateFunc: fleet_management_api.controllers.security_controller.validate_scope_oAuth2AuthCode

