/*
BringAuto Fleet Management v2 API

Specification for BringAuto fleet backend HTTP API

API version: 2.3.1
Contact: fleet@bringauto.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GNSSPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GNSSPosition{}

// GNSSPosition GNSSPosition primitive structure.
type GNSSPosition struct {
	Latitude *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
	Altitude *float32 `json:"altitude,omitempty"`
}

// NewGNSSPosition instantiates a new GNSSPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGNSSPosition() *GNSSPosition {
	this := GNSSPosition{}
	var latitude float32 = 0.0
	this.Latitude = &latitude
	var longitude float32 = 0.0
	this.Longitude = &longitude
	var altitude float32 = 0.0
	this.Altitude = &altitude
	return &this
}

// NewGNSSPositionWithDefaults instantiates a new GNSSPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGNSSPositionWithDefaults() *GNSSPosition {
	this := GNSSPosition{}
	var latitude float32 = 0.0
	this.Latitude = &latitude
	var longitude float32 = 0.0
	this.Longitude = &longitude
	var altitude float32 = 0.0
	this.Altitude = &altitude
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *GNSSPosition) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GNSSPosition) GetLatitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *GNSSPosition) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *GNSSPosition) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *GNSSPosition) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GNSSPosition) GetLongitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *GNSSPosition) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *GNSSPosition) SetLongitude(v float32) {
	o.Longitude = &v
}

// GetAltitude returns the Altitude field value if set, zero value otherwise.
func (o *GNSSPosition) GetAltitude() float32 {
	if o == nil || IsNil(o.Altitude) {
		var ret float32
		return ret
	}
	return *o.Altitude
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GNSSPosition) GetAltitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Altitude) {
		return nil, false
	}
	return o.Altitude, true
}

// HasAltitude returns a boolean if a field has been set.
func (o *GNSSPosition) HasAltitude() bool {
	if o != nil && !IsNil(o.Altitude) {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given float32 and assigns it to the Altitude field.
func (o *GNSSPosition) SetAltitude(v float32) {
	o.Altitude = &v
}

func (o GNSSPosition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GNSSPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.Altitude) {
		toSerialize["altitude"] = o.Altitude
	}
	return toSerialize, nil
}

type NullableGNSSPosition struct {
	value *GNSSPosition
	isSet bool
}

func (v NullableGNSSPosition) Get() *GNSSPosition {
	return v.value
}

func (v *NullableGNSSPosition) Set(val *GNSSPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableGNSSPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableGNSSPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGNSSPosition(val *GNSSPosition) *NullableGNSSPosition {
	return &NullableGNSSPosition{value: val, isSet: true}
}

func (v NullableGNSSPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGNSSPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


