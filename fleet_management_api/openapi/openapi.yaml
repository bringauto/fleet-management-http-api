openapi: 3.0.0
info:
  description: Specification for BringAuto fleet backend HTTP API
  title: BringAuto Fleet Management API
  version: 1.0.0
servers:
- description: Local server
  url: /v1
tags:
- description: Car related functions
  name: car
- description: Car state related functions
  name: carState
- description: Order related functions
  name: order
- description: Platform hardware ID related functions
  name: platformHwId
- description: Route state related functions
  name: route
- description: Stop state related functions
  name: stop
- description: User related functions
  name: user
paths:
  /car:
    get:
      operationId: get_cars
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                platformId: 1
                name: BAT-2022-01
                carAdminPhone:
                  phone: "+420123456789"
                defaultRouteId: 1
                underTest: false
              schema:
                items:
                  $ref: '#/components/schemas/Car'
                type: array
          description: Successfuly found all cars
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all cars
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car
    post:
      operationId: create_car
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
        description: New car json
        required: true
        x-body-name: car
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: Successful car creation
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new car
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car
    put:
      operationId: update_car
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
        description: Car update json
        required: true
        x-body-name: car
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: Successful car update
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update an existing car by ID
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car
  /car/startstop/{carId}:
    get:
      operationId: startstop_car
      parameters:
      - description: ID of car to start/stop
        example: 1
        explode: false
        in: path
        name: carId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful car start/stop
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Start/stop car by ID (intended for phonecalls)
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car_startstop
  /car/{carId}:
    delete:
      operationId: delete_car
      parameters:
      - description: ID of car to delete
        example: 1
        explode: false
        in: path
        name: carId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful car removal
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "405":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "405"
                    message: Method not allowed
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a car
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car
    get:
      operationId: get_car
      parameters:
      - description: ID of car to return
        example: 1
        explode: false
        in: path
        name: carId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: Successfuly found car
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds car by ID
      tags:
      - car
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car
  /carstate:
    get:
      operationId: get_all_car_states
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CarState'
                type: array
          description: Successfuly found all car states
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all car states
      tags:
      - carState
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car_state
    post:
      operationId: add_car_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarState'
        description: Car state json
        required: true
        x-body-name: carState
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarState'
          description: Successfuly added car state
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Add a new state for a car by ID
      tags:
      - carState
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car_state
  /carstate/{carId}:
    get:
      operationId: get_car_states
      parameters:
      - description: ID of car for which states shall be returned
        example: 1
        explode: false
        in: path
        name: carId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Whether to return all available car states or only the latest
          one
        example: true
        explode: true
        in: query
        name: allAvailable
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarState'
          description: Successfuly found car state
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds car states by ID
      tags:
      - carState
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.car_state
  /order:
    get:
      operationId: get_orders
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                priority: normal
                userId: 1
                status: to_accept
                carId: 1
                targetStopId: 1
                stopRouteId: 1
                notificationPhone:
                  phone: "+420123456789"
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Successfuly found all orders
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all orders
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
    post:
      operationId: create_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: New order json
        required: true
        x-body-name: order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successful order creation
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new order
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
    put:
      operationId: update_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: Order update json
        required: true
        x-body-name: order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successful order update
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update an existing order by ID
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
  /order/wait/{carId}:
    get:
      operationId: get_updated_orders
      parameters:
      - description: ID of car with order to return
        example: 1
        explode: false
        in: path
        name: carId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successfuly received new order
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "408":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "408"
                    message: Request timeout
              schema:
                $ref: '#/components/schemas/Error'
          description: Request timeout
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get order by car ID only if it changed
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
  /order/{orderId}:
    delete:
      operationId: delete_order
      parameters:
      - description: ID of order to delete
        example: 1
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful order removal
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "405":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "405"
                    message: Method not allowed
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete an order
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
    get:
      operationId: get_order
      parameters:
      - description: ID of order to return
        example: 1
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successfuly found order
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds order by ID
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order
  /orderstate:
    get:
      operationId: get_all_order_states
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                orderId: 1
                status: to_accept
                carId: 1
              schema:
                items:
                  $ref: '#/components/schemas/OrderState'
                type: array
          description: Successfuly found all order states
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all order states
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
    post:
      operationId: create_order_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderState'
        description: New order state json
        required: true
        x-body-name: orderState
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderState'
          description: Succesfully added new order state
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new order state
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
  /orderstate/{orderId}:
    get:
      operationId: get_order_states
      parameters:
      - description: ID of order for which states shall be returned
        example: 1
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Whether to return all available order states or only the latest
          one
        example: true
        explode: true
        in: query
        name: allAvailable
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderState'
          description: Successfuly found order state
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds order state by ID
      tags:
      - order
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.order_state
  /platformhwid:
    get:
      operationId: get_hw_ids
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: ABCD1234EF56
              schema:
                items:
                  $ref: '#/components/schemas/PlatformHwId'
                type: array
          description: Successfuly found all platform hardware IDs
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all platform hwIds
      tags:
      - platformHwId
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.platform_hwid
    post:
      operationId: create_hw_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformHwId'
        description: Platform hardware ID json
        required: true
        x-body-name: platformHwId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformHwId'
          description: Successful platform hardware ID creation
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new platform hwId
      tags:
      - platformHwId
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.platform_hwid
  /platformhwid/{platformhwidId}:
    delete:
      operationId: delete_hw_id
      parameters:
      - description: ID of platform hwId to delete
        example: 1
        explode: false
        in: path
        name: platformhwidId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful platform hardware ID removal
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "405":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "405"
                    message: Method not allowed
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a platform hwId
      tags:
      - platformHwId
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.platform_hwid
    get:
      operationId: get_hw_id
      parameters:
      - description: ID of platform hwId to return
        example: 1
        explode: false
        in: path
        name: platformhwidId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformHwId'
          description: Successfuly found platform hardware ID
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds platform hwId by ID
      tags:
      - platformHwId
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.platform_hwid
  /route:
    get:
      operationId: get_routes
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: Lužánky
                points:
                - latitude: 49.204117
                  longitude: 16.606525
                  altitude: 400.25
                stopIds:
                - 1
                - 2
                - 3
                - 4
              schema:
                items:
                  $ref: '#/components/schemas/Route'
                type: array
          description: Successfuly found all routes
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all routes
      tags:
      - route
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.route
    post:
      operationId: create_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
        description: New route json
        required: true
        x-body-name: route
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successful route creation
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new route
      tags:
      - route
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.route
    put:
      operationId: update_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
        description: Route update json
        required: true
        x-body-name: route
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successful route update
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update an existing route by ID
      tags:
      - route
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.route
  /route/{routeId}:
    delete:
      operationId: delete_route
      parameters:
      - description: ID of route to delete
        example: 1
        explode: false
        in: path
        name: routeId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful route removal
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "405":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "405"
                    message: Method not allowed
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a route
      tags:
      - route
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.route
    get:
      operationId: get_route
      parameters:
      - description: ID of route to return
        example: 1
        explode: false
        in: path
        name: routeId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfuly found route
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds route by ID
      tags:
      - route
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.route
  /stop:
    get:
      operationId: get_stops
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: Lidická
                position:
                  latitude: 49.204117
                  longitude: 16.606525
                  altitude: 400.25
                notificationPhone:
                  phone: "+420123456789"
              schema:
                items:
                  $ref: '#/components/schemas/Stop'
                type: array
          description: Successfuly found all stops
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds all stops
      tags:
      - stop
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.stop
    post:
      operationId: create_stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
        description: New stop json
        required: true
        x-body-name: stop
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: Successful stop creation
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a new stop
      tags:
      - stop
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.stop
    put:
      operationId: update_stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
        description: Stop update json
        required: true
        x-body-name: stop
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: Successful stop update
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update an existing stop by ID
      tags:
      - stop
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.stop
  /stop/{stopId}:
    delete:
      operationId: delete_stop
      parameters:
      - description: ID of stop to delete
        example: 1
        explode: false
        in: path
        name: stopId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Successful stop removal
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "405":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "405"
                    message: Method not allowed
              schema:
                $ref: '#/components/schemas/Error'
          description: Method not allowed
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a stop
      tags:
      - stop
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.stop
    get:
      operationId: get_stop
      parameters:
      - description: ID of stop to return
        example: 1
        explode: false
        in: path
        name: stopId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: Successfuly found stop
        "400":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "400"
                    message: Bad request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "401"
                    message: Unauthorized
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "403"
                    message: Request forbidden
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "404"
                    message: Resource not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        default:
          content:
            application/json:
              examples:
                error:
                  value:
                    code: "500"
                    message: Unexpected error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Finds stop by ID
      tags:
      - stop
      x-openapi-router-controller: fleet_management_api.api_impl.controllers.stop
components:
  responses:
    Unauthorized:
      content:
        application/json:
          examples:
            error:
              value:
                code: "401"
                message: Unauthorized
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    Forbidden:
      content:
        application/json:
          examples:
            error:
              value:
                code: "403"
                message: Request forbidden
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    UnexpectedError:
      content:
        application/json:
          examples:
            error:
              value:
                code: "500"
                message: Unexpected error
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
    BadRequest:
      content:
        application/json:
          examples:
            error:
              value:
                code: "400"
                message: Bad request
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad request
    NotFound:
      content:
        application/json:
          examples:
            error:
              value:
                code: "404"
                message: Resource not found
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
    MethodNotAllowed:
      content:
        application/json:
          examples:
            error:
              value:
                code: "405"
                message: Method not allowed
          schema:
            $ref: '#/components/schemas/Error'
      description: Method not allowed
    RequestTimeout:
      content:
        application/json:
          examples:
            error:
              value:
                code: "408"
                message: Request timeout
          schema:
            $ref: '#/components/schemas/Error'
      description: Request timeout
  schemas:
    Car:
      description: Car object structure
      example:
        underTest: false
        name: BAT-2022-01
        defaultRouteId: 1
        id: 1
        platformId: 1
        carAdminPhone:
          phone: "+420123456789"
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        platformId:
          example: 1
          format: int32
          title: id
          type: integer
        name:
          example: BAT-2022-01
          title: name
          type: string
        carAdminPhone:
          $ref: '#/components/schemas/MobilePhone'
        defaultRouteId:
          example: 1
          format: int32
          title: id
          type: integer
        underTest:
          default: true
          example: false
          title: underTest
          type: boolean
      required:
      - id
      - name
      - platformId
      title: Car
      type: object
    CarState:
      description: Car state object structure
      example:
        fuel: 80
        id: 1
        position:
          altitude: 400.25
          latitude: 49.204117
          longitude: 16.606525
        speed: 20.5
        status: idle
        carId: 1
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        status:
          $ref: '#/components/schemas/CarStatus'
        fuel:
          default: 0
          example: 80
          format: int32
          title: fuel
          type: integer
        carId:
          example: 1
          format: int32
          title: id
          type: integer
        speed:
          default: 0.0
          example: 20.5
          format: float
          title: speed
          type: number
        position:
          $ref: '#/components/schemas/GNSSPosition'
      required:
      - carId
      - id
      - status
      title: CarState
      type: object
    Order:
      description: Order object structure
      example:
        notification: Order notification
        stopRouteId: 1
        notificationPhone:
          phone: "+420123456789"
        targetStopId: 1
        id: 1
        priority: normal
        userId: 1
        carId: 1
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        priority:
          default: normal
          description: "Priority (low, normal, high)"
          pattern: ^(low|normal|high)$
          title: priority
          type: string
        userId:
          example: 1
          format: int32
          title: id
          type: integer
        carId:
          example: 1
          format: int32
          title: id
          type: integer
        notification:
          example: Order notification
          title: notification
          type: string
        targetStopId:
          example: 1
          format: int32
          title: id
          type: integer
        stopRouteId:
          example: 1
          format: int32
          title: id
          type: integer
        notificationPhone:
          $ref: '#/components/schemas/MobilePhone'
      required:
      - carId
      - id
      - stopRouteId
      - targetStopId
      - userId
      title: Order
      type: object
    OrderState:
      description: Order state object structure
      example:
        orderId: 1
        id: 1
        status: to_accept
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderId:
          example: 1
          format: int32
          title: orderId
          type: integer
      required:
      - id
      - orderId
      - status
      title: OrderState
      type: object
    PlatformHwId:
      description: PlatformHwId object structure
      example:
        name: ABCD1234EF56
        id: 1
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        name:
          example: ABCD1234EF56
          title: name
          type: string
      required:
      - id
      - name
      title: PlatformHwId
      type: object
    Route:
      description: Route object structure
      example:
        name: Lužánky
        stopIds:
        - 1
        - 2
        - 3
        - 4
        id: 1
        points:
        - latitude: 49.204117
          longitude: 16.606525
          altitude: 400.25
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        name:
          example: Lužánky
          title: name
          type: string
        points:
          default: []
          example:
          - latitude: 49.204117
            longitude: 16.606525
            altitude: 400.25
          items:
            $ref: '#/components/schemas/GNSSPosition'
          title: points
          type: array
        stopIds:
          default: []
          example:
          - 1
          - 2
          - 3
          - 4
          items:
            type: integer
          title: stopIds
          type: array
      required:
      - id
      - name
      title: Route
      type: object
    Stop:
      description: Stop object structure
      example:
        notificationPhone:
          phone: "+420123456789"
        name: Lidická
        id: 1
        position:
          altitude: 400.25
          latitude: 49.204117
          longitude: 16.606525
      properties:
        id:
          example: 1
          format: int32
          title: id
          type: integer
        name:
          example: Lidická
          title: name
          type: string
        position:
          $ref: '#/components/schemas/GNSSPosition'
        notificationPhone:
          $ref: '#/components/schemas/MobilePhone'
      required:
      - id
      - name
      - position
      title: Stop
      type: object
    CarStatus:
      description: CarStatus enum
      enum:
      - idle
      - charging
      - out_of_order
      - stopped_by_phone
      example: idle
      title: CarStatus
      type: string
    OrderStatus:
      description: "OrderStatus (to_accept, accepted, in_progress, done, canceled)"
      enum:
      - to_accept
      - accepted
      - in_progress
      - done
      - canceled
      example: to_accept
      title: OrderStatus
      type: string
    Priority:
      default: normal
      description: "Priority (low, normal, high)"
      pattern: ^(low|normal|high)$
      title: priority
      type: string
    Error:
      description: Error object structure
      properties:
        code:
          example: 404
          title: code
          type: integer
        message:
          example: Not found
          title: message
          type: string
      required:
      - code
      - message
      title: Error
      type: object
    Id:
      example: 1
      format: int32
      title: id
      type: integer
    MobilePhone:
      description: MobilePhone Primitive structure
      example:
        phone: "+420123456789"
      properties:
        phone:
          example: "+420123456789"
          title: phone
          type: string
      title: MobilePhone
      type: object
    GNSSPosition:
      description: GNSSPosition primitive structure
      example:
        altitude: 400.25
        latitude: 49.204117
        longitude: 16.606525
      properties:
        latitude:
          default: 0.0
          example: 49.204117
          format: float
          title: latitude
          type: number
        longitude:
          default: 0.0
          example: 16.606525
          format: float
          title: longitude
          type: number
        altitude:
          default: 0.0
          example: 400.25
          format: float
          title: altitude
          type: number
      title: GNSSPosition
      type: object
